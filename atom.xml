<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-01-02T13:28:10.208Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>miaulab</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>About Pytorch super()</title>
    <link href="http://yoursite.com/2020/01/02/About-Pytorch-super/"/>
    <id>http://yoursite.com/2020/01/02/About-Pytorch-super/</id>
    <published>2020-01-02T12:50:23.000Z</published>
    <updated>2020-01-02T13:28:10.208Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Ref: </p></blockquote><h3 id="super-has-2-major-pros"><a href="#super-has-2-major-pros" class="headerlink" title="super() has 2 major pros:"></a>super() has 2 major pros:</h3><ul><li>Avoids using the base class explicitly</li><li>Working with Multiple Inheritance</li></ul><h3 id="reminder"><a href="#reminder" class="headerlink" title="reminder:"></a>reminder:</h3><ul><li>During super instantiation, it firstly tries to find the base class of the same level, if no such case, executes its own base class.</li><li>No repeat call</li></ul><p>Example1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">class A():</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class A&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        super(A, self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class A&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">class B(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class B&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        super(B,self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class B&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">class C(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class C&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        super(C,self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class C&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">class D(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class D&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        super(D, self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class D&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">class E(B,C,D):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class E&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        super(E, self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class E&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">sample&#x3D;E() </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">print(E.__mro__)</span></pre></td></tr></table></figure><p>the output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Call class E</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Call class B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Call class C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Call class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Call class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Leave class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Leave class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">Leave class C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">Leave class B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">Leave class E</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">(&lt;class &#39;__main__.E&#39;&gt;, &lt;class &#39;__main__.B&#39;&gt;, &lt;class &#39;__main__.C&#39;&gt;, &lt;class &#39;__main__.D&#39;&gt;, &lt;class &#39;__main__.A&#39;&gt;, &lt;class &#39;object&#39;&gt;)</span></pre></td></tr></table></figure><hr><p>Example2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">class A():</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class A&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class A&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">class B(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class B&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class B&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">class C(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class C&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        super(C,self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class C&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">class D(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class D&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        super(D, self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class D&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">class E(B,C,D):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class E&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        B.__init__(self)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        C.__init__(self)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        D.__init__(self)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class E&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">sample&#x3D;E()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">print(E.__mro__)</span></pre></td></tr></table></figure><p>the output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Call class E</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Call class B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Leave class B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Call class C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Call class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Call class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Leave class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">Leave class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">Leave class C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">Call class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">Call class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">Leave class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">Leave class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">Leave class E</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">(&lt;class &#39;__main__.E&#39;&gt;, &lt;class &#39;__main__.B&#39;&gt;, &lt;class &#39;__main__.C&#39;&gt;, &lt;class &#39;__main__.D&#39;&gt;, &lt;class &#39;__main__.A&#39;&gt;, &lt;class &#39;object&#39;&gt;)</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Ref: &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;super-has-2-major-pros&quot;&gt;&lt;a href=&quot;#super-has-2-major-pros&quot; class=&quot;headerlink&quot; title=&quot;super() 
      
    
    </summary>
    
    
    
      <category term="Pytorch basics" scheme="http://yoursite.com/tags/Pytorch-basics/"/>
    
  </entry>
  
  <entry>
    <title>Setup Jupyter Notebook with Python 3 on Ubuntu18.04</title>
    <link href="http://yoursite.com/2019/12/11/jupyter-notebook/"/>
    <id>http://yoursite.com/2019/12/11/jupyter-notebook/</id>
    <published>2019-12-11T13:53:20.000Z</published>
    <updated>2019-12-26T14:18:45.384Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Ref: <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-jupyter-notebook-with-python-3-on-ubuntu-18-04" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-set-up-jupyter-notebook-with-python-3-on-ubuntu-18-04</a></p></blockquote><h6 id="Step-1-Set-Up-Python"><a href="#Step-1-Set-Up-Python" class="headerlink" title="Step 1 - Set Up Python"></a>Step 1 - Set Up Python</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ sudo apt update</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ sudo apt install python3-pip python3-dev</span></pre></td></tr></table></figure><h6 id="Step-2-Create-a-Python-Virtual-Environment-for-Jupyter"><a href="#Step-2-Create-a-Python-Virtual-Environment-for-Jupyter" class="headerlink" title="Step 2 - Create a Python Virtual Environment for Jupyter"></a>Step 2 - Create a Python Virtual Environment for Jupyter</h6><p>Upgrade pip and install the package by typing:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ sudo -H pip3 install --upgrade pip</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ sudo -H pip3 install virtualenv</span></pre></td></tr></table></figure><p>The <strong>-H</strong> flag ensures that the security policy sets the <strong>home</strong> environment variable to the home directory of the target user.</p><p>With virtualenv installed, we can start forming our environment. Create and move into a directory where we can keep our project files. We’ll call this <strong>meow_Jupyter_dir</strong>, but you should use a name that is meaningful for you and what you’re working on.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ mkdir ~&#x2F;meow_Jupyter_dir</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;meow_Jupyter_dir</span></pre></td></tr></table></figure><p>Within the project directory, we’ll create a Python virtual environment. For the purpose of this tutorial, we’ll call it <strong>meow_Jupyter_env</strong> but you should call it something that is relevant to your project.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ virtualenv meow_Jupyter_env</span></pre></td></tr></table></figure><p>This will create a directory called <strong>meow_Jupyter_env</strong> within your <strong>/meow_Jupyter_dir</strong> directory. Inside, it will install a local version of Python and a local version of pip. We can use this to install and configure an isolated Python environment for Jupyter.</p><p>Before we install Jupyter, we need to activate the virtual environment. You can do that by typing:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ source my_project_env&#x2F;bin&#x2F;activate</span></pre></td></tr></table></figure><p>Your prompt should change to indicate that you are now operating within a Python virtual environment. It will look something like this: <strong>(meow_Jupyter_env)user@host:~/meow_Jupyter_dir$</strong>.</p><p>You’re now ready to install Jupyter into this virtual environment.</p><h6 id="Step-3-Install-Jupyter"><a href="#Step-3-Install-Jupyter" class="headerlink" title="Step 3 - Install Jupyter"></a>Step 3 - Install Jupyter</h6><p>With your virtual environment active, install Jupyter with the local instance of pip.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ pip install jupyter</span></pre></td></tr></table></figure><h6 id="Step-4-Run-Jupyter-Notebook"><a href="#Step-4-Run-Jupyter-Notebook" class="headerlink" title="Step 4 - Run Jupyter Notebook"></a>Step 4 - Run Jupyter Notebook</h6><p>You now have everything you need to run Jupyter Notebook! To run it, execute the following command:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">(meow_Jupyter_env)user@host:~&#x2F;meow_Jupyter_dir$ jupyter notebook</span></pre></td></tr></table></figure><p>A log of the activities of the Jupyter Notebook will be printed to the terminal. When you run Jupyter Notebook, it runs on a specific port number. The first Notebook you run will usually use port <strong>8888</strong>. To check the specific port number Jupyter Notebook is running on, refer to the output of the command used to start it:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[I 22:22:01.655 NotebookApp] Serving notebooks from local directory: &#x2F;home&#x2F;meow&#x2F;meow_Jupyter_dir</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[I 22:22:01.655 NotebookApp] The Jupyter Notebook is running at:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">[I 22:22:01.655 NotebookApp] http:&#x2F;&#x2F;localhost:8888&#x2F;?token&#x3D;bd9fb1ffea853311666052bd331268f3cb7392ea50e0ce4f</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">[I 22:22:01.655 NotebookApp]  or http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;?token&#x3D;bd9fb1ffea853311666052bd331268f3cb7392ea50e0ce4f</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">[I 22:22:01.655 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">[C 22:22:01.659 NotebookApp]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    To access the notebook, open this file in a browser:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        file:&#x2F;&#x2F;&#x2F;home&#x2F;meow&#x2F;.local&#x2F;share&#x2F;jupyter&#x2F;runtime&#x2F;nbserver-26312-open.html</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    Or copy and paste one of these URLs:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        http:&#x2F;&#x2F;localhost:8888&#x2F;?token&#x3D;bd9fb1ffea853311666052bd331268f3cb7392ea50e0ce4f</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">     or http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;?token&#x3D;bd9fb1ffea853311666052bd331268f3cb7392ea50e0ce4f</span></pre></td></tr></table></figure><p>If you are running Jupyter Notebook on a local computer (not on a server), you can navigate to the displayed URL to connect to Jupyter Notebook. If you are running Jupyter Notebook on a server, you will need to connect to the server using SSH tunneling as outlined in the next section.</p><p>At this point, you can keep the SSH connection open and keep Jupyter Notebook running or you can exit the app and re-run it once you set up SSH tunneling. Let’s choose to stop the Jupyter Notebook process. We will run it again once we have SSH tunneling set up. To stop the Jupyter Notebook process, press CTRL+C, type Y, and then ENTER to confirm.</p><p>We’ll now set up an SSH tunnel so that we can access the Notebook.</p><h6 id="Step-5-Connect-to-the-Server-Using-SSH-Tunneling"><a href="#Step-5-Connect-to-the-Server-Using-SSH-Tunneling" class="headerlink" title="Step 5 - Connect to the Server Using SSH Tunneling"></a>Step 5 - Connect to the Server Using SSH Tunneling</h6><p>In this section we will learn how to connect to the Jupyter Notebook web interface using SSH tunneling. Since Jupyter Notebook will run on a specific port on the server (such as :8888, :8889 etc.), SSH tunneling enables you to connect to the server’s port securely.</p><p>The next two subsections describe how to create an SSH tunnel from <strong>1) a Mac or Linux, and 2) Windows</strong>. Please refer to the subsection for your local computer.</p><h6 id="SSH-Tunneling-with-a-Mac-or-Linux"><a href="#SSH-Tunneling-with-a-Mac-or-Linux" class="headerlink" title="SSH Tunneling with a Mac or Linux"></a>SSH Tunneling with a Mac or Linux</h6><p>If you are using a Mac or Linux, the steps for creating an SSH tunnel are similar to using SSH to log in to your remote server, except that there are additional parameters in the ssh command. This subsection will outline the additional parameters needed in the ssh command to tunnel successfully.</p><p>SSH tunneling can be done by running the following SSH command in a new local terminal window:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ssh -L 8888:localhost:8888 your_server_username@your_server_ip</span></pre></td></tr></table></figure><p>The ssh command opens an SSH connection, but -L specifies that the given port on the local (client) host is to be forwarded to the given host and port on the remote side (server). This means that whatever is running on the second port number (e.g. 8888) on the server will appear on the first port number (e.g. 8888) on your local computer.</p><p>Optionally change port 8888 to one of your choosing to avoid using a port already in use by another process.</p><p>server_username is your username (e.g. meow) on the server which you created and your_server_ip is the IP address of your server.</p><p>If no error shows up after running the ssh -L command, you can move into your programming environment and run Jupyter Notebook:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ (meow_Jupyter_env)user@host:~&#x2F;meow_Jupyter_dir$ jupyter notebook</span></pre></td></tr></table></figure><p>You’ll receive output with a URL. From a web browser on your local machine, open the Jupyter Notebook web interface with the URL that starts with <a href="http://localhost:8888" target="_blank" rel="noopener">http://localhost:8888</a>. Ensure that the token number is included, or enter the token number string when prompted at <a href="http://localhost:8888" target="_blank" rel="noopener">http://localhost:8888</a>.</p><h6 id="SSH-Tunneling-with-Windows-and-Putty"><a href="#SSH-Tunneling-with-Windows-and-Putty" class="headerlink" title="SSH Tunneling with Windows and Putty"></a>SSH Tunneling with Windows and Putty</h6><p>If you are using Windows, you can create an SSH tunnel using Putty.</p><p>First, enter the server URL or IP address as the hostname as shown:</p><p><img src="D:%5CBlog%5Chexo%5Csource_posts%5Cimage-putty_session_config.png" alt="image-putty_session_config"></p><p>Next, click SSH on the bottom of the left pane to expand the menu, and then click Tunnels. Enter the local port number you want to use to access Jupyter on your local machine. Choose 8000 or greater to avoid ports used by other services, and set the destination as localhost:8888 where :8888 is the number of the port that Jupyter Notebook is running on.</p><p>Now click the Add button, and the ports should appear in the Forwarded ports list:</p><p><img src="D:%5CBlog%5Chexo%5Csource_posts%5Cimage-putty_ssh_tunnel_config.png" alt="image-putty_ssh_tunnel_config"></p><p>Finally, click the Open button to connect to the server via SSH and tunnel the desired ports. Navigate to <a href="http://localhost:8000" target="_blank" rel="noopener">http://localhost:8000</a> (or whatever port you chose) in a web browser to connect to Jupyter Notebook running on the server. Ensure that the token number is included, or enter the token number string when prompted at <a href="http://localhost:8000" target="_blank" rel="noopener">http://localhost:8000</a>.</p><h6 id="Step-6-Using-Jupyter-Notebook"><a href="#Step-6-Using-Jupyter-Notebook" class="headerlink" title="Step 6 - Using Jupyter Notebook"></a>Step 6 - Using Jupyter Notebook</h6><p><img src="D:%5CBlog%5Chexo%5Csource_posts%5Cimage-jupyter_UI.png" alt="image-jupyter_UI"></p><p><strong>Done!</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Ref: &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-set-up-jupyter-notebook-with-python-3-on-ubuntu-18-04&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World-Neuanfang</title>
    <link href="http://yoursite.com/2019/11/28/hello-world/"/>
    <id>http://yoursite.com/2019/11/28/hello-world/</id>
    <published>2019-11-28T12:48:01.177Z</published>
    <updated>2019-12-25T13:52:08.842Z</updated>
    
    <content type="html"><![CDATA[<p>I am happy to announce that I finally made miaulab’s blog debut at the tail of 2019! I hope I won’t spoil the fun;)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I am happy to announce that I finally made miaulab’s blog debut at the tail of 2019! I hope I won’t spoil the fun;)&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
</feed>
