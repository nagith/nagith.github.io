<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-23T06:54:21.379Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>miaulab</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>remote access to ubuntu 18.04.3 via win10</title>
    <link href="http://yoursite.com/2020/04/22/remote-access-to-ubuntu-18-04-3-via-win10/"/>
    <id>http://yoursite.com/2020/04/22/remote-access-to-ubuntu-18-04-3-via-win10/</id>
    <published>2020-04-22T09:53:21.000Z</published>
    <updated>2020-04-23T06:54:21.379Z</updated>
    
    <content type="html"><![CDATA[<p>Recently I tried to remote login to my Ubuntu 18.04.3 from my win10 laptop. I experienced pretty much trial and error.</p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><h4 id="1-install-vnc4server-some-said-this-tightvncserver-should-be-installed-prior-to-xrdp"><a href="#1-install-vnc4server-some-said-this-tightvncserver-should-be-installed-prior-to-xrdp" class="headerlink" title="1. install vnc4server (some said this/tightvncserver should be installed prior to xrdp)"></a>1. install vnc4server (some said this/tightvncserver should be installed prior to xrdp)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">~$sudo apt-get install vnc4server</span></pre></td></tr></table></figure><h4 id="2-install-xrdp"><a href="#2-install-xrdp" class="headerlink" title="2. install xrdp"></a>2. install xrdp</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">~$sudo apt-get install xrdp</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">~$sudo sudo systemctl enable xrdp</span></pre></td></tr></table></figure><h4 id="3-install-xfce4"><a href="#3-install-xfce4" class="headerlink" title="3. install xfce4"></a>3. install xfce4</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">~$sudo apt-get update</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">~$sudo apt-get install xfce4</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">~$sudo apt-get install xubuntu-desktop</span></pre></td></tr></table></figure><h4 id="4-configure-xfce4"><a href="#4-configure-xfce4" class="headerlink" title="4. configure xfce4"></a>4. configure xfce4</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">~$echo &quot;xfce4-session&quot; &gt;~&#x2F;.xsession</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">~$sudo vi &#x2F;etc&#x2F;xrdp&#x2F;startwm.sh</span></pre></td></tr></table></figure><p>before the line ./etc/X11/Xsession, insert:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">xfce4-session</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">~$sudo service xrdp restart</span></pre></td></tr></table></figure><p>But after connecting from win10, it stuck at the login page like this:</p><p><img src="/2020/04/22/remote-access-to-ubuntu-18-04-3-via-win10/D:%5CBlog%5Chexo%5Csource_posts%5Cremote-access-to-ubuntu-18-04-3-via-win10%5Cxrdp_issue.png" alt="xrdp_issue"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Connecting to sesman IP 127.0.0.1 port 3350</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sesman connect ok</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">sending login info to session manager, please wait...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">srdp_mm_process_login_response:login successful for display</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">started connecting</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">connecting to 127.0.0.1 5910</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">error-problem connecting</span></pre></td></tr></table></figure><h3 id="Problem-Solving"><a href="#Problem-Solving" class="headerlink" title="Problem Solving"></a>Problem Solving</h3><p>Install missing dependencies by issuing the following command.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">~$sudo apt-get install xorgxrdp</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">~$sudo apt-get install xserver-xorg-core</span></pre></td></tr></table></figure><p>Fixing keyboard and mouse interaction issues:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">~$sudo apt-get-y install xserver-xorg-input-all</span></pre></td></tr></table></figure><p>For certain user, it might further need to change this file</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">~$sudo vi &#x2F;etc&#x2F;X11&#x2F;Xwrapper.config</span></pre></td></tr></table></figure><p>where change</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">allowed_user&#x3D;anybody</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Recently I tried to remote login to my Ubuntu 18.04.3 from my win10 laptop. I experienced pretty much trial and error.&lt;/p&gt;
&lt;h3 id=&quot;Instal
      
    
    </summary>
    
    
    
      <category term="xrdp+xfce" scheme="http://yoursite.com/tags/xrdp-xfce/"/>
    
  </entry>
  
  <entry>
    <title>Building SSR with VPS</title>
    <link href="http://yoursite.com/2020/01/08/Building-SSR-with-VPS/"/>
    <id>http://yoursite.com/2020/01/08/Building-SSR-with-VPS/</id>
    <published>2020-01-08T11:07:00.000Z</published>
    <updated>2020-01-09T13:11:50.647Z</updated>
    
    <content type="html"><![CDATA[<p>Ref: <a href="https://www.baishitou.cn/1524.html" target="_blank" rel="noopener">https://www.baishitou.cn/1524.html</a></p><p>Recommended VPS server:</p><p><a href="http://www.vultr.com" target="_blank" rel="noopener">http://www.vultr.com</a></p><p>Sign up and pay for the monthly service. I choose $10/month. </p><p><img src="/2020/01/08/Building-SSR-with-VPS/VPS-location.jpg" alt="VPS-location"></p><p>Choose the server location: Silicon Valley</p><p>Choose the server type: CentOS 7</p><p>Choose the server size: $5/mo</p><p>Additional Features: Enable IPv6</p><p>Keep the VPS IP and password for later deployment.</p><p>After the VPS is on, ping the ip to check whether it works or not. Discard the ones with high ping values, usually around 100 is fine. For me:</p><p><img src="/2020/01/08/Building-SSR-with-VPS/ping.jpg" alt="ping"></p><h3 id="Step-2-Deploy-VPS"><a href="#Step-2-Deploy-VPS" class="headerlink" title="Step 2: Deploy VPS"></a>Step 2: Deploy VPS</h3><p>Download Xshell: <a href="https://xshell.en.softonic.com/download" target="_blank" rel="noopener">https://xshell.en.softonic.com/download</a></p><p><img src="/2020/01/08/Building-SSR-with-VPS/Xshell.png" alt="Xshell"></p><p>Open Xshell, create a session with the VPS IP and password, username: root.</p><p>After successfully connected to the server, execute:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https:&#x2F;&#x2F;freed.ga&#x2F;github&#x2F;shadowsocksR.sh; bash shadowsocksR.sh</span></pre></td></tr></table></figure><p>Setting the connecting password and port number, I use 8787</p><p>After successfully install SSR, there will be several lines popping up starting with: congratulation… Keep the information such as Sever IP, port, connecting password…</p><h3 id="Step-3-Speed-up-VPS"><a href="#Step-3-Speed-up-VPS" class="headerlink" title="Step 3: Speed up VPS"></a>Step 3: Speed up VPS</h3><p>While in Xshell, execute:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">uname -r</span></pre></td></tr></table></figure><p>Its output starts with 3, indicating the server is CentOS 7 x64 system, execute:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O rskernel.sh https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;hombo125&#x2F;doubi&#x2F;master&#x2F;rskernel.sh &amp;&amp; bash rskernel.sh</span></pre></td></tr></table></figure><p>The system reboots after changing the kernel and will be in a disconnected state. So connect it again and execute:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">yum install net-tools -y &amp;&amp; wget --no-check-certificate -O appex.sh https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;0oVicero0&#x2F;serverSpeeder_Install&#x2F;master&#x2F;appex.sh &amp;&amp; bash appex.sh install</span></pre></td></tr></table></figure><p>When successfully installed, it shows:</p><p><img src="/2020/01/08/Building-SSR-with-VPS/Speedup-SSR.png" alt="Speedup-SSR"></p><p>Download Shadowsocks:</p><p>Open Shadowsocks:</p><p><img src="/2020/01/08/Building-SSR-with-VPS/Shadowsocks.png" alt="Shadowsocks"></p><p>Right click the bottom right, enable system proxy.</p><p>Check it with Youtube:</p><p><img src="/2020/01/08/Building-SSR-with-VPS/youtube.png" alt="youtube"></p><p><strong>DONE!</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ref: &lt;a href=&quot;https://www.baishitou.cn/1524.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.baishitou.cn/1524.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recommende
      
    
    </summary>
    
    
    
      <category term="VPS, SSR" scheme="http://yoursite.com/tags/VPS-SSR/"/>
    
  </entry>
  
  <entry>
    <title>python basics</title>
    <link href="http://yoursite.com/2020/01/03/python-basics/"/>
    <id>http://yoursite.com/2020/01/03/python-basics/</id>
    <published>2020-01-03T08:37:12.000Z</published>
    <updated>2020-01-03T13:58:45.303Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Map"><a href="#Map" class="headerlink" title="Map()"></a>Map()</h3><p>Takes a function as a 1st argument and applies it to each of the elements of its 2nd argument, an iterable. Examples of iterables are strings, lists, and tuples.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">list(map(lambda x: x.capitalize(), [&#39;math&#39;, &#39;poem&#39;, &#39;drawing&#39;]))</span></pre></td></tr></table></figure><p>The output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[&#39;Math&#39;, &#39;Poem&#39;, &#39;Drawing&#39;]</span></pre></td></tr></table></figure><p>example of passing multiple iterators to map() using lambda</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">num1 &#x3D; [1, 2, 3]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">num2 &#x3D; [4, 5, 6]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">sum &#x3D; map(lambda n1, n2: n1+n2, num1, num2)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">print(list(sum))</span></pre></td></tr></table></figure><p>The output: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[5, 7, 9]</span></pre></td></tr></table></figure><h3 id="Filter"><a href="#Filter" class="headerlink" title="Filter()"></a>Filter()</h3><p>Takes a predicate as a 1st argument and an iterable as a 2nd argument. It builds an iterator containing all the elements of the initial collections that satisfies the predicate function.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">list(filter(lambda x: x%3 &#x3D;&#x3D; 0, range(13)))</span></pre></td></tr></table></figure><p>The output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[0, 3, 6, 9, 12]</span></pre></td></tr></table></figure><h3 id="Reduce"><a href="#Reduce" class="headerlink" title="Reduce()"></a>Reduce()</h3><blockquote><p>Ref: <a href="https://www.geeksforgeeks.org/reduce-in-python/" target="_blank" rel="noopener">https://www.geeksforgeeks.org/reduce-in-python/</a></p></blockquote><ol><li>Call a function with the first 2 items from the sequence and return the result.</li><li>Call the function again with the result obtained in step 1 and the next value in the sequence. Such process repeats until the end.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">import functools </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">lis &#x3D; [ 1 , 3, 5, 6, 2, ] </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">print (functools.reduce(lambda a,b : a+b,lis)) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">print (functools.reduce(lambda a,b : a if a &gt; b else b,lis))</span></pre></td></tr></table></figure><p>The output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">17</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">6</span></pre></td></tr></table></figure><h3 id="Sorted"><a href="#Sorted" class="headerlink" title="Sorted()"></a>Sorted()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sorted(iterable, key&#x3D;None, reverse&#x3D;False)</span></pre></td></tr></table></figure><ul><li><strong>iterable</strong> - A sequence (string, tuple, list) or collection (set, dictionary, frozen set) or any other iterator.</li><li><strong>key</strong> - A function that serves as a key for the sort comparison.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># List </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">x &#x3D; [&#39;j&#39;, &#39;u&#39;, &#39;p&#39;, &#39;y&#39;, &#39;t&#39;, &#39;e&#39;, &#39;r&#39;] </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">print (sorted(x)) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"># Tuple </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">x &#x3D; (&#39;j&#39;, &#39;u&#39;, &#39;p&#39;, &#39;y&#39;, &#39;t&#39;, &#39;e&#39;, &#39;r&#39;) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">print (sorted(x))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"># String-sorted based on ASCII translations </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">x &#x3D; &quot;jupyter&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">print (sorted(x)) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"># Dictionary </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">x &#x3D; &#123;&#39;j&#39;:1, &#39;u&#39;:2, &#39;p&#39;:3, &#39;y&#39;:4, &#39;t&#39;:5, &#39;e&#39;:6, &#39;r&#39;:7&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">print (sorted(x))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"># Set </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">x &#x3D; &#123;&#39;j&#39;, &#39;u&#39;, &#39;p&#39;, &#39;y&#39;, &#39;t&#39;, &#39;e&#39;, &#39;r&#39;&#125; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">print (sorted(x)) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"># Frozen Set </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"># remember that sets can&#39;t contain mutable objects, but sets are mutable</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">fruits &#x3D; set([&quot;apple&quot;, &quot;orange&quot;, &quot;watermelon&quot;])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">fruits.add(&quot;strawberry&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">print (fruits)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"># but frozenset is immutable</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">x &#x3D; frozenset((&#39;j&#39;, &#39;u&#39;, &#39;p&#39;, &#39;y&#39;, &#39;t&#39;, &#39;e&#39;, &#39;r&#39;)) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">print (sorted(x))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"># when using dictionary as an iterable for a frozen set, it only takes key of the dictionary to create the set.</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">stu &#x3D; &#123;&quot;name&quot;: &quot;Yoyo&quot;, &quot;age&quot;: 18, &quot;sex&quot;: &quot;female&quot;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">info_stu &#x3D; frozenset(stu)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">print(info_stu)</span></pre></td></tr></table></figure><p>The output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[&#39;e&#39;, &#39;j&#39;, &#39;p&#39;, &#39;r&#39;, &#39;t&#39;, &#39;u&#39;, &#39;y&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[&#39;e&#39;, &#39;j&#39;, &#39;p&#39;, &#39;r&#39;, &#39;t&#39;, &#39;u&#39;, &#39;y&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">[&#39;e&#39;, &#39;j&#39;, &#39;p&#39;, &#39;r&#39;, &#39;t&#39;, &#39;u&#39;, &#39;y&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">[&#39;e&#39;, &#39;j&#39;, &#39;p&#39;, &#39;r&#39;, &#39;t&#39;, &#39;u&#39;, &#39;y&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">[&#39;e&#39;, &#39;j&#39;, &#39;p&#39;, &#39;r&#39;, &#39;t&#39;, &#39;u&#39;, &#39;y&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#123;&#39;orange&#39;, &#39;strawberry&#39;, &#39;apple&#39;, &#39;watermelon&#39;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">[&#39;e&#39;, &#39;j&#39;, &#39;p&#39;, &#39;r&#39;, &#39;t&#39;, &#39;u&#39;, &#39;y&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">frozenset(&#123;&#39;sex&#39;, &#39;age&#39;, &#39;name&#39;&#125;)</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sorted(&quot;He has a friend named amiau&quot;.split(), key&#x3D;str.lower)</span></pre></td></tr></table></figure><p>The output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[&#39;a&#39;, &#39;amiau&#39;, &#39;friend&#39;, &#39;has&#39;, &#39;He&#39;, &#39;named&#39;]</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">holiday_tuples &#x3D; [</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    (&#39;Bern&#39;, &#39;A&#39;, 10),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    (&#39;Ann&#39;, &#39;B&#39;, 20),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    (&#39;Jim&#39;, &#39;A&#39;, 6),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">sorted(holiday_tuples, key&#x3D;lambda stu: stu[2])</span></pre></td></tr></table></figure><p>The output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[(&#39;Jim&#39;, &#39;A&#39;, 6), (&#39;Bern&#39;, &#39;A&#39;, 10), (&#39;Ann&#39;, &#39;B&#39;, 20)]</span></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">def remain(x): </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    return x % 3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">S &#x3D; [10, 9, 23, 20] </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">sorted(S, key &#x3D; remain)</span></pre></td></tr></table></figure><p>The output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[9, 10, 23, 20]</span></pre></td></tr></table></figure><h3 id="zip"><a href="#zip" class="headerlink" title="zip()"></a>zip()</h3><blockquote></blockquote><p>map the similar index of multiple containers so that they can be used just using as single entity.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">name &#x3D; [ &quot;Manjeet&quot;, &quot;Nikhil&quot;, &quot;Shambhavi&quot;, &quot;Astha&quot; ] </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">roll_no &#x3D; [ 4, 1, 3, 2 ] </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">marks &#x3D; [ 40, 50, 60, 70 ] </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"># using zip() to map values </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">mapped &#x3D; zip(name, roll_no, marks) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"># converting values to print as list </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">mapped &#x3D; list(mapped) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"># printing resultant values  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">print (&quot;The zipped result is : &quot;,end&#x3D;&quot;&quot;) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">print (mapped) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">print(&quot;\n&quot;) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"># unzipping values </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">namz, roll_noz, marksz &#x3D; zip(*mapped) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">print (&quot;The unzipped result: \n&quot;,end&#x3D;&quot;&quot;) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"># printing initial lists </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">print (&quot;The name list is : &quot;,end&#x3D;&quot;&quot;) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">print (namz) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">print (&quot;The roll_no list is : &quot;,end&#x3D;&quot;&quot;) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">print (roll_noz) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">print (&quot;The marks list is : &quot;,end&#x3D;&quot;&quot;) </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">print (marksz)</span></pre></td></tr></table></figure><p>The output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">The zipped result is : [(&#39;Manjeet&#39;, 4, 40), (&#39;Nikhil&#39;, 1, 50), (&#39;Shambhavi&#39;, 3, 60), (&#39;Astha&#39;, 2, 70)]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">The unzipped result: </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">The name list is : (&#39;Manjeet&#39;, &#39;Nikhil&#39;, &#39;Shambhavi&#39;, &#39;Astha&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">The roll_no list is : (4, 1, 3, 2)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">The marks list is : (40, 50, 60, 70)</span></pre></td></tr></table></figure><p>Another example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># initializing list of players. </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">players &#x3D; [ &quot;Sachin&quot;, &quot;Sehwag&quot;, &quot;Gambhir&quot;, &quot;Dravid&quot;, &quot;Raina&quot; ] </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"># initializing their scores </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">scores &#x3D; [100, 15, 17, 28, 43 ] </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"># printing players and scores. </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">for pl, sc in zip(players, scores): </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    print (&quot;Player :  %s     Score : %d&quot; %(pl, sc))</span></pre></td></tr></table></figure><p>The output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Player :  Sachin     Score : 100</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Player :  Sehwag     Score : 15</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Player :  Gambhir     Score : 17</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Player :  Dravid     Score : 28</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Player :  Raina     Score : 43</span></pre></td></tr></table></figure><ul><li><p>If we do not pass any parameter, zip() returns an empty iterator</p></li><li><p>If a single iterable is passed, zip() returns an iterator of tuples with each tuple having only one element.</p></li><li><p>If multiple iterables are passed, zip() returns an iterator of tuples with each tuple having elements from all the iterables.</p><p>Suppose, two iterables are passed to zip(); one iterable containing three and other containing five elements. Then, the returned iterator will contain three tuples. It’s because iterator stops when the shortest iterable is exhausted.</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">numbersList &#x3D; [1, 2, 3]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">str_list &#x3D; [&#39;one&#39;, &#39;two&#39;]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">numbers_tuple &#x3D; (&#39;ONE&#39;, &#39;TWO&#39;, &#39;THREE&#39;, &#39;FOUR&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"># Notice, the size of numbersList and numbers_tuple is different</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">result0 &#x3D; zip()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">result &#x3D; zip(numbersList, numbers_tuple)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"># Converting to set</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">result_set0 &#x3D; set(result0)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">print(result_set0)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">result_set &#x3D; set(result)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">print(result_set)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">result &#x3D; zip(numbersList, str_list, numbers_tuple)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"># Converting to set</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">result_set &#x3D; set(result)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">print(result_set)</span></pre></td></tr></table></figure><p>The output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">set()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">&#123;(3, &#39;THREE&#39;), (1, &#39;ONE&#39;), (2, &#39;TWO&#39;)&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#123;(2, &#39;two&#39;, &#39;TWO&#39;), (1, &#39;one&#39;, &#39;ONE&#39;)&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Map&quot;&gt;&lt;a href=&quot;#Map&quot; class=&quot;headerlink&quot; title=&quot;Map()&quot;&gt;&lt;/a&gt;Map()&lt;/h3&gt;&lt;p&gt;Takes a function as a 1st argument and applies it to each of t
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>About Pytorch super()</title>
    <link href="http://yoursite.com/2020/01/02/About-Pytorch-super/"/>
    <id>http://yoursite.com/2020/01/02/About-Pytorch-super/</id>
    <published>2020-01-02T12:50:23.000Z</published>
    <updated>2020-01-02T13:31:04.359Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Ref: <a href="https://blog.csdn.net/shiheyingzhe/article/details/83051471" target="_blank" rel="noopener">https://blog.csdn.net/shiheyingzhe/article/details/83051471</a></p></blockquote><h3 id="super-has-2-major-pros"><a href="#super-has-2-major-pros" class="headerlink" title="super() has 2 major pros:"></a>super() has 2 major pros:</h3><ul><li>Avoids using the base class explicitly</li><li>Working with Multiple Inheritance</li></ul><h3 id="reminder"><a href="#reminder" class="headerlink" title="reminder:"></a>reminder:</h3><ul><li>During super instantiation, it firstly tries to find the base class of the same level, if no such case, executes its own base class.</li><li>No repeat call</li></ul><p>Example1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">class A():</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class A&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        super(A, self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class A&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">class B(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class B&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        super(B,self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class B&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">class C(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class C&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        super(C,self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class C&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">class D(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class D&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        super(D, self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class D&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">class E(B,C,D):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class E&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        super(E, self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class E&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">sample&#x3D;E() </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">print(E.__mro__)</span></pre></td></tr></table></figure><p>the output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Call class E</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Call class B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Call class C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Call class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Call class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Leave class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Leave class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">Leave class C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">Leave class B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">Leave class E</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">(&lt;class &#39;__main__.E&#39;&gt;, &lt;class &#39;__main__.B&#39;&gt;, &lt;class &#39;__main__.C&#39;&gt;, &lt;class &#39;__main__.D&#39;&gt;, &lt;class &#39;__main__.A&#39;&gt;, &lt;class &#39;object&#39;&gt;)</span></pre></td></tr></table></figure><hr><p>Example2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">class A():</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class A&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class A&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">class B(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class B&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class B&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">class C(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class C&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        super(C,self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class C&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">class D(A):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class D&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        super(D, self).__init__()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class D&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">class E(B,C,D):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    def __init__(self):</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Call class E&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        B.__init__(self)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        C.__init__(self)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        D.__init__(self)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        print(&#39;Leave class E&#39;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">sample&#x3D;E()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">print(E.__mro__)</span></pre></td></tr></table></figure><p>the output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Call class E</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Call class B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Leave class B</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Call class C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Call class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Call class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">Leave class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">Leave class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">Leave class C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">Call class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">Call class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">Leave class A</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">Leave class D</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">Leave class E</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">(&lt;class &#39;__main__.E&#39;&gt;, &lt;class &#39;__main__.B&#39;&gt;, &lt;class &#39;__main__.C&#39;&gt;, &lt;class &#39;__main__.D&#39;&gt;, &lt;class &#39;__main__.A&#39;&gt;, &lt;class &#39;object&#39;&gt;)</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Ref: &lt;a href=&quot;https://blog.csdn.net/shiheyingzhe/article/details/83051471&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.
      
    
    </summary>
    
    
    
      <category term="Pytorch basics" scheme="http://yoursite.com/tags/Pytorch-basics/"/>
    
  </entry>
  
  <entry>
    <title>Setup Jupyter Notebook with Python 3 on Ubuntu18.04</title>
    <link href="http://yoursite.com/2019/12/11/jupyter-notebook/"/>
    <id>http://yoursite.com/2019/12/11/jupyter-notebook/</id>
    <published>2019-12-11T13:53:20.000Z</published>
    <updated>2020-01-09T13:15:51.991Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Ref: <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-jupyter-notebook-with-python-3-on-ubuntu-18-04" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-set-up-jupyter-notebook-with-python-3-on-ubuntu-18-04</a></p></blockquote><h3 id="Step-1-Set-Up-Python"><a href="#Step-1-Set-Up-Python" class="headerlink" title="Step 1 - Set Up Python"></a>Step 1 - Set Up Python</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ sudo apt update</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ sudo apt install python3-pip python3-dev</span></pre></td></tr></table></figure><h3 id="Step-2-Create-a-Python-Virtual-Environment"><a href="#Step-2-Create-a-Python-Virtual-Environment" class="headerlink" title="Step 2 - Create a Python Virtual Environment"></a>Step 2 - Create a Python Virtual Environment</h3><p>Upgrade pip and install the package by typing:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ sudo -H pip3 install --upgrade pip</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ sudo -H pip3 install virtualenv</span></pre></td></tr></table></figure><p>The <strong>-H</strong> flag ensures that the security policy sets the <strong>home</strong> environment variable to the home directory of the target user.</p><p>With virtualenv installed, we can start forming our environment. Create and move into a directory where we can keep our project files. We’ll call this <strong>meow_Jupyter_dir</strong>, but you should use a name that is meaningful for you and what you’re working on.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ mkdir ~&#x2F;meow_Jupyter_dir</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;meow_Jupyter_dir</span></pre></td></tr></table></figure><p>Within the project directory, we’ll create a Python virtual environment. For the purpose of this tutorial, we’ll call it <strong>meow_Jupyter_env</strong> but you should call it something that is relevant to your project.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ virtualenv meow_Jupyter_env</span></pre></td></tr></table></figure><p>This will create a directory called <strong>meow_Jupyter_env</strong> within your <strong>/meow_Jupyter_dir</strong> directory. Inside, it will install a local version of Python and a local version of pip. We can use this to install and configure an isolated Python environment for Jupyter.</p><p>Before we install Jupyter, we need to activate the virtual environment. You can do that by typing:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ source my_project_env&#x2F;bin&#x2F;activate</span></pre></td></tr></table></figure><p>Your prompt should change to indicate that you are now operating within a Python virtual environment. It will look something like this: <strong>(meow_Jupyter_env)user@host:~/meow_Jupyter_dir$</strong>.</p><p>You’re now ready to install Jupyter into this virtual environment.</p><h3 id="Step3-Install-Jupyter"><a href="#Step3-Install-Jupyter" class="headerlink" title="Step3 - Install Jupyter"></a>Step3 - Install Jupyter</h3><p>With your virtual environment active, install Jupyter with the local instance of pip.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ pip install jupyter</span></pre></td></tr></table></figure><h3 id="Step4-Run-Jupyter-Notebook"><a href="#Step4-Run-Jupyter-Notebook" class="headerlink" title="Step4 - Run Jupyter Notebook"></a>Step4 - Run Jupyter Notebook</h3><p>You now have everything you need to run Jupyter Notebook! To run it, execute the following command:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">(meow_Jupyter_env)user@host:~&#x2F;meow_Jupyter_dir$ jupyter notebook</span></pre></td></tr></table></figure><p>A log of the activities of the Jupyter Notebook will be printed to the terminal. When you run Jupyter Notebook, it runs on a specific port number. The first Notebook you run will usually use port <strong>8888</strong>. To check the specific port number Jupyter Notebook is running on, refer to the output of the command used to start it:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">[I 22:22:01.655 NotebookApp] Serving notebooks from local directory: &#x2F;home&#x2F;meow&#x2F;meow_Jupyter_dir</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">[I 22:22:01.655 NotebookApp] The Jupyter Notebook is running at:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">[I 22:22:01.655 NotebookApp] http:&#x2F;&#x2F;localhost:8888&#x2F;?token&#x3D;bd9fb1ffea853311666052bd331268f3cb7392ea50e0ce4f</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">[I 22:22:01.655 NotebookApp]  or http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;?token&#x3D;bd9fb1ffea853311666052bd331268f3cb7392ea50e0ce4f</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">[I 22:22:01.655 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">[C 22:22:01.659 NotebookApp]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    To access the notebook, open this file in a browser:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        file:&#x2F;&#x2F;&#x2F;home&#x2F;meow&#x2F;.local&#x2F;share&#x2F;jupyter&#x2F;runtime&#x2F;nbserver-26312-open.html</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    Or copy and paste one of these URLs:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        http:&#x2F;&#x2F;localhost:8888&#x2F;?token&#x3D;bd9fb1ffea853311666052bd331268f3cb7392ea50e0ce4f</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">     or http:&#x2F;&#x2F;127.0.0.1:8888&#x2F;?token&#x3D;bd9fb1ffea853311666052bd331268f3cb7392ea50e0ce4f</span></pre></td></tr></table></figure><p>If you are running Jupyter Notebook on a local computer (not on a server), you can navigate to the displayed URL to connect to Jupyter Notebook. If you are running Jupyter Notebook on a server, you will need to connect to the server using SSH tunneling as outlined in the next section.</p><p>At this point, you can keep the SSH connection open and keep Jupyter Notebook running or you can exit the app and re-run it once you set up SSH tunneling. Let’s choose to stop the Jupyter Notebook process. We will run it again once we have SSH tunneling set up. To stop the Jupyter Notebook process, press CTRL+C, type Y, and then ENTER to confirm.</p><p>We’ll now set up an SSH tunnel so that we can access the Notebook.</p><h3 id="Step-5-Connect-to-the-Server-Using-SSH-Tunneling"><a href="#Step-5-Connect-to-the-Server-Using-SSH-Tunneling" class="headerlink" title="Step 5 - Connect to the Server Using SSH Tunneling"></a>Step 5 - Connect to the Server Using SSH Tunneling</h3><p>In this section we will learn how to connect to the Jupyter Notebook web interface using SSH tunneling. Since Jupyter Notebook will run on a specific port on the server (such as :8888, :8889 etc.), SSH tunneling enables you to connect to the server’s port securely.</p><p>The next two subsections describe how to create an SSH tunnel from <strong>1) a Mac or Linux, and 2) Windows</strong>. Please refer to the subsection for your local computer.</p><h6 id="SSH-Tunneling-with-a-Mac-or-Linux"><a href="#SSH-Tunneling-with-a-Mac-or-Linux" class="headerlink" title="SSH Tunneling with a Mac or Linux"></a>SSH Tunneling with a Mac or Linux</h6><p>If you are using a Mac or Linux, the steps for creating an SSH tunnel are similar to using SSH to log in to your remote server, except that there are additional parameters in the ssh command. This subsection will outline the additional parameters needed in the ssh command to tunnel successfully.</p><p>SSH tunneling can be done by running the following SSH command in a new local terminal window:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ssh -L 8888:localhost:8888 your_server_username@your_server_ip</span></pre></td></tr></table></figure><p>The ssh command opens an SSH connection, but -L specifies that the given port on the local (client) host is to be forwarded to the given host and port on the remote side (server). This means that whatever is running on the second port number (e.g. 8888) on the server will appear on the first port number (e.g. 8888) on your local computer.</p><p>Optionally change port 8888 to one of your choosing to avoid using a port already in use by another process.</p><p>server_username is your username (e.g. meow) on the server which you created and your_server_ip is the IP address of your server.</p><p>If no error shows up after running the ssh -L command, you can move into your programming environment and run Jupyter Notebook:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ (meow_Jupyter_env)user@host:~&#x2F;meow_Jupyter_dir$ jupyter notebook</span></pre></td></tr></table></figure><p>You’ll receive output with a URL. From a web browser on your local machine, open the Jupyter Notebook web interface with the URL that starts with <a href="http://localhost:8888" target="_blank" rel="noopener">http://localhost:8888</a>. Ensure that the token number is included, or enter the token number string when prompted at <a href="http://localhost:8888" target="_blank" rel="noopener">http://localhost:8888</a>.</p><h6 id="SSH-Tunneling-with-Windows-and-Putty"><a href="#SSH-Tunneling-with-Windows-and-Putty" class="headerlink" title="SSH Tunneling with Windows and Putty"></a>SSH Tunneling with Windows and Putty</h6><p>If you are using Windows, you can create an SSH tunnel using Putty.</p><p>First, enter the server URL or IP address as the hostname as shown:</p><p><img src="/2019/12/11/jupyter-notebook/putty_session_config.png" alt="image-putty_session_config"></p><p>Next, click SSH on the bottom of the left pane to expand the menu, and then click Tunnels. Enter the local port number you want to use to access Jupyter on your local machine. Choose 8000 or greater to avoid ports used by other services, and set the destination as localhost:8888 where :8888 is the number of the port that Jupyter Notebook is running on.</p><p>Now click the Add button, and the ports should appear in the Forwarded ports list:</p><p><img src="/2019/12/11/jupyter-notebook/putty_ssh_tunnel_config.png" alt="image-putty_ssh_tunnel_config"></p><p>Finally, click the Open button to connect to the server via SSH and tunnel the desired ports. Navigate to <a href="http://localhost:8000" target="_blank" rel="noopener">http://localhost:8000</a> (or whatever port you chose) in a web browser to connect to Jupyter Notebook running on the server. Ensure that the token number is included, or enter the token number string when prompted at <a href="http://localhost:8000" target="_blank" rel="noopener">http://localhost:8000</a>.</p><h3 id="Step-6-Using-Jupyter-Notebook"><a href="#Step-6-Using-Jupyter-Notebook" class="headerlink" title="Step 6 - Using Jupyter Notebook"></a>Step 6 - Using Jupyter Notebook</h3><p><img src="/2019/12/11/jupyter-notebook/jupyter_UI.png" alt="image-jupyter_UI"></p><p><strong>Done!</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Ref: &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-set-up-jupyter-notebook-with-python-3-on-ubuntu-18-04&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World-Neuanfang</title>
    <link href="http://yoursite.com/2019/11/28/hello-world/"/>
    <id>http://yoursite.com/2019/11/28/hello-world/</id>
    <published>2019-11-28T12:48:01.177Z</published>
    <updated>2019-12-25T13:52:08.842Z</updated>
    
    <content type="html"><![CDATA[<p>I am happy to announce that I finally made miaulab’s blog debut at the tail of 2019! I hope I won’t spoil the fun;)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I am happy to announce that I finally made miaulab’s blog debut at the tail of 2019! I hope I won’t spoil the fun;)&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
</feed>
